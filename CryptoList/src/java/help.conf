# Cryptolist - A GnuPG encrypted mailing list
# Copyright (C) 2013 Oliver Verlinden (http://wps-verlinden.de)
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, see <http://www.gnu.org/licenses/>.

info=This mailing list provides a secure encrypted communication channel for a closed user group.\n\
    All messages are transfered PGP signed and encrypted. To participate you need \n\
    to send your public key to the list administrator your_name@domain.com.\n\n\
    To request further information send an email with subject "REQ-HELP: topic_keyword" to the mailing\n\
    list address. Available topics keywords are:\n\
    info\t\t->\t\treceive this general info page\n\
    pgp\t\t-->\t\tuseful information about pg\n\
    openpgp\t\t-->\t\tuseful information about the OpenPGP encryption software\n\
    pubKeyEncryption\t\t-->\t\tbackground information about asymetric encryption\n\
    getKey\t\t-->\t\trequest the mailing list's public key you need for encryption
    

pgp=Pretty Good Privacy (PGP) is a data encryption and decryption computer program that provides cryptographic\n\
    privacy and authentication for data communication. PGP is often used for signing, encrypting, and decrypting\n\
    texts, e-mails, files, directories, and whole disk partitions to increase the security of e-mail communications.\n\
    It was created by Phil Zimmermann in 1991. PGP and similar software follow the OpenPGP standard (RFC 4880) for \n\
    encrypting and decrypting data.\n\n\
    Source: http://en.wikipedia.org/wiki/Pretty_Good_Privacy

openpgp=Inside PGP Inc., there was still concern about patent issues. RSADSI was challenging the continuation of the\n\
    Viacrypt RSA license to the newly merged firm. The company adopted an informal internal standard called\n\
    "Unencumbered PGP": "use no algorithm with licensing difficulties". Because of PGP encryption's importance\n\
    worldwide (it is thought to be the most widely chosen quality cryptographic system), many wanted to write their\n\
    own software that would interoperate with PGP 5. Zimmermann became convinced that an open standard for PGP\n\
    encryption was critical for them and for the cryptographic community as a whole. In July 1997, PGP Inc.\n\
    proposed to the IETF that there be a standard called OpenPGP. They gave the IETF permission to use the name\n\
    OpenPGP to describe this new standard as well as any program that supported the standard. The IETF accepted\n\
    the proposal and started the OpenPGP Working Group.\n\n\
    OpenPGP is on the Internet Standards Track and is under active development. The current specification is\n\
    RFC 4880 (November 2007), the successor to RFC 2440. Many e-mail clients provide OpenPGP-compliant email\n\
    security as described in RFC 3156.\n\n\
    The Free Software Foundation has developed its own OpenPGP-compliant program called GNU Privacy Guard\n\
    (abbreviated GnuPG or GPG). GnuPG is freely available together with all source code under the GNU General\n\
    Public License (GPL) and is maintained separately from several Graphical User Interfaces GUIs that interact\n\
    with the GnuPG library for encryption, decryption and signing functions (see KGPG, Seahorse, MacGPG).\n\
    Several other vendors have also developed OpenPGP-compliant software.\n\n\
    There are several iOS and Android OpenPGP-compliant applications such as iPGMail for iOS and APG for Android\n\
    which enable key generation and encryption/decryption of email and files on Apple's iOS and Google Android devices.\n\n\
    Source: http://en.wikipedia.org/wiki/Openpgp#OpenPGP

pubKeyEncryption=Public-key cryptography, also known as asymmetric cryptography, refers to a cryptographic\n\
    algorithm which requires two separate keys one of which is secret (or private) and one of which is public.\n\
    Although different, the two parts of this key pair are mathematically linked. The public key is used to\n\
    encrypt plaintext or to verify a digital signature; whereas the private key is used to decrypt ciphertext\n\
    or to create a digital signature. The term "asymmetric" stems from the use of different keys to perform\n\
    these opposite functions, each the inverse of the other – as contrasted with conventional ("symmetric")\n\
    cryptography which relies on the same key to perform both.\n\n\
    Public-key algorithms are based on mathematical problems which currently admit no efficient solution that\n\
    are inherent in certain integer factorization, discrete logarithm, and elliptic curve relationships. It\n\
    is computationally easy for a user to generate their public and private key-pair and to use them for\n\
    encryption and decryption. The strength lies in the fact that it is "impossible" (computationally\n\
    infeasible) for a properly generated private key to be determined from its corresponding public key.\n\
    Thus the public key may be published without compromising security, whereas the private key must not be\n\
    revealed to anyone not authorized to read messages or perform digital signatures. Public key algorithms,\n\
    unlike symmetric key algorithms, do not require a secure initial exchange of one (or more) secret keys\n\
    between the parties.\n\n\
    Message authentication involves processing a message with a private key to produce a digital signature.\n\
    Thereafter anyone can verify this signature by processing the signature value with the signers\n\
    corresponding public key and comparing that result with the message. Success confirms the message\n\
    is unmodified since it was signed, and – presuming the signer's private key has remained secret to\n\
    the signer – that the signer, and no one else, intentionally performed the signature operation. In\n\
    practice, typically only a hash or digest of the message, and not the message itself, is encrypted\n\
    as the signature.\n\n\
    Public-key algorithms are fundamental security ingredients in cryptosystems, applications and protocols.\n\
    They underpin such Internet standards as Transport Layer Security (TLS), PGP, and GPG. Some public key\n\
    algorithms provide key distribution and secrecy (e.g., Diffie–Hellman key exchange), some provide\n\
    digital signatures (e.g., Digital Signature Algorithm), and some provide both (e.g., RSA). Each of\n\
    these algorithms is well-trusted and widely used.\n\n\
    Source: http://en.wikipedia.org/wiki/Public-key_encryption

getKey=Please encrypt your messages you want to send to the mailing list with the following public key:\n\
    \n\
    -----BEGIN PGP PUBLIC KEY BLOCK-----\n\
    Version: GnuPG v1.4.11 (GNU/Linux)\n\
    \n\
    INSERT YOUR PUBLIC KEY HERE\n\
    \n\
    -----END PGP PUBLIC KEY BLOCK-----